PROC PRINTTO LOG="\\WPUSHH01\DINFOPLN\Marketing Mix PI\MMF 2012\MMF\SAPHRIS\PGM2a.LOG" NEW
			PRINT="\\WPUSHH01\DINFOPLN\Marketing Mix PI\MMF 2012\MMF\SAPHRIS\PGM2a.LST" NEW;

* TEST COMPARISON SELECTION - USING PROC FASTCLUS;
* RUN BY EVENT MONTH AND ALIGN DATA BEFORE STANDARDIZE;
* 5/08 - PREVIOUSLY ANY TEST FROM 2007 WOULD NOT BE IN CONTROL;
*    CHANGED TO ALLOW TEST FROM MONTHS OTHER THAN MONTH BEING ANALYZED TO BE USED AS CONTROL;


OPTIONS NOCENTER MPRINT COMPRESS = YES;
*LIBNAME MMF '\\WPUSHH01\DINFOPLN\MARKETING MIX PI\MMF 2012\MMF\SAPHRIS';
LIBNAME MMF 'C:\E\MMF 2012\SAPHRIS';
RUN;

%LET MONUM=24;             * # OF MONTHS ON DATASET FROM GRAIL;
%LET CATVAR=CAT;           * USE CAT FOR ALL PRODUCTS EXCEPT COSOPT - CAT2; 

/*** FOR DULERA;
%LET NUMARRAY=(3,4,5,6,7); * MONTHS OF ATTENDANCE CORRESPONDING TO GRAIL (FROM LOW TO HIGH);
%LET M=5;                 * # OF MONTHS OF ATTENDANCE;
%LET LAG=2;                * LAG = 1ST NUMARRAY VALUE - 1;
*/
*** FOR OTHER BRANDS;
%LET NUMARRAY=(3,4,5,6,7,8,9,10,11,12,13,14);   * MONTHS OF ATTENDANCE CORRESPONDING TO GRAIL (FROM LOW TO HIGH);
%LET M=12;                 * # OF MONTHS OF ATTENDANCE;
%LET LAG=2;                * LAG = 1ST NUMARRAY VALUE - 1;

RUN;

%MACRO BIGLOOP(CAT,CATNAME);

PROC DATASETS LIBRARY = WORK NOLIST KILL;
RUN;  QUIT;

TITLE2 ' ';
TITLE "PGM2A - TEST COMPARISON SELECTION - FASTCLUS - ALIGN THEN STANDARDIZE - CAT=&CAT";

*******************************************;
*** PREP TEST & CANDIDATE DOCS ************;
*******************************************;
DATA PREP (KEEP=DOCID IMSDRNUM RAND KEY MONTH A1N: AN: DET: USCOREGN USCORDT SPEC
           &CATVAR TESTCAND HELCODE VENUE HSAIND QTR);
 SET MMF.SFP_INPUTSET (WHERE=(IMSDRNUM NE ' ' AND &CATVAR="&CAT"));
 LENGTH KEY $10;
 RAND=RANUNI(996799);
 ARRAY A1N    (&MONUM) A1N1-A1N&MONUM;
 ARRAY AN     (&MONUM) AN1-AN&MONUM;
 ARRAY DETTOT (&MONUM) DETTOT1-DETTOT&MONUM;
 DO I=1 TO &MONUM;
    IF A1N(I)=. THEN A1N(I)=0;
    IF AN(I)=. THEN AN(I)=0;
    IF DETTOT(I)=. THEN DETTOT(I)=0;
 END;
 KEY=TRIM(LEFT(USCOREGN))||'-'||TRIM(LEFT(SPEC))||'-'||TRIM(LEFT(&&CATVAR));
 IF NOT INHEL THEN TESTCAND='C';
    ELSE TESTCAND='T';

PROC SORT DATA=PREP; BY TESTCAND KEY RAND;
RUN;

PROC FREQ DATA=PREP; TABLES MONTH/LIST MISSING; RUN;
PROC PRINT DATA=PREP (OBS=10);  TITLE2 'PREP DATASET'; RUN;


PROC DATASETS LIB=MMF NOLIST;
DELETE CLUSRESULTS_&CATNAME CLUSINITIAL_&CATNAME; RUN;

PROC DATASETS LIB=WORK NOLIST;
DELETE TOTALTEST;   RUN;

********************************************************************;
*** GET NUMBER OF KEY ITERATIONS ***********************************;
*** CONTROL COUNTS ARE UNDERESTIMATED HERE - ADD BACK SOME TEST  ***;
***    TO INCREASE CONTROL (OTHER TEST NOT FROM TEST MONTH)      ***;   
********************************************************************;
PROC FREQ DATA=PREP NOPRINT; WHERE TESTCAND='T';
     TABLES KEY*MONTH / OUT=FOUT1; RUN;
PROC FREQ DATA=PREP NOPRINT; WHERE TESTCAND='C';
     TABLES KEY / OUT=FOUT2 (RENAME=(COUNT=CANDCOUNT)); RUN;

DATA MMF.KEYS_&CATNAME (DROP=PERCENT);
 MERGE FOUT1 FOUT2; BY KEY;
 IF CANDCOUNT<0 THEN CANDCOUNT=0;
 IF COUNT<0 THEN COUNT=0;
 USECOUNT=MIN(OF COUNT, CANDCOUNT);
 IF COUNT>0 THEN RATIO=ROUND(CANDCOUNT/COUNT,.1);
 CANDPERDOC=TRIM(LEFT(CANDCOUNT))||'/'||TRIM(LEFT(COUNT))||'='||TRIM(LEFT(RATIO));
 IF CANDCOUNT<COUNT THEN PROB='LESS CAND';
 ELSE IF COUNT=0 THEN PROB='JUST CAND';
 ELSE PROB='         ';
 LABEL COUNT="TEST DOC COUNT"
       CANDCOUNT="CANDIDATE DOC COUNT"
       USECOUNT="USABLE PAIRS";
RUN;

PROC SORT DATA=MMF.KEYS_&CATNAME OUT=TEMPKEYS;  BY MONTH KEY;  RUN;
PROC PRINT DATA=TEMPKEYS; RUN;


***********************************************;
*** BEGIN TO ITERATE THROUGH MONTH AND THEN KEY;
***********************************************;
%MACRO CLUSLOOP;

%DO MONTH=1 %TO &M;

PROC DATASETS LIB=WORK NOLIST;
DELETE FINALRESULTS&MONTH ALLINITIAL&MONTH;   RUN;

*** ALLOWS TEST FROM ANOTHER MONTH-X TO BE CONTROL IN CURRENT MONTH-Y AS LONG AS NOT TEST IN CURRENT MONTH-Y;
*** DO BY IMSDRNUM SINCE IMSDRNUM WILL REPEAT ACROSS MONTHS BUT DOCID WILL NOT;
*** DROP VARS FROM CNTL IF WHAT THAT VAR TO HAVE SAME VALUE AS TEST;
PROC SORT DATA=PREP (WHERE=(MONTH=&MONTH+&LAG)) OUT=TPULL&MONTH;  BY IMSDRNUM;  RUN;
PROC SORT DATA=TPULL&MONTH OUT=TPULL2&MONTH NODUPKEY;  BY IMSDRNUM;  RUN;
PROC SORT DATA=PREP (WHERE=(MONTH NE &MONTH+&LAG)) OUT=CPULL&MONTH;  BY IMSDRNUM;  RUN;

DATA NEWCNTL&MONTH (DROP=VENUE USCORDT HSAIND);
  MERGE TPULL2&MONTH (IN=T DROP=MONTH TESTCAND) CPULL&MONTH (IN=C DROP=MONTH TESTCAND);
  BY IMSDRNUM;
  IF C AND NOT T;
  MONTH=.;
  TESTCAND='C';
  RUN;

*** CREATE MATCHING VARS FOR TEST & CANDIDATE DOCS BASED ON HEL MONTH;
*** TEST DOCS ARE BY MONTH USING MONTH=&MONTH+&LAG;
*** CANDIDATE DOCS ARE REPEATED FOR EACH MONTH USING MONTH=.;
DATA PRESTAND&MONTH (KEEP=KEY MONTH &CATVAR PVOLM1-PVOLM3 MVOLQ1
                     DETQ1 DOCID IMSDRNUM TESTCAND HELCODE VENUE USCORDT HSAIND QTR);
SET TPULL&MONTH  NEWCNTL&MONTH;
 ARRAY NUM (&M)    NUM1-NUM&M &NUMARRAY;
 ARRAY A1N (&MONUM) A1N1-A1N&MONUM;
 ARRAY AN  (&MONUM) AN1-AN&MONUM;
 ARRAY DETTOT (&MONUM) DETTOT1-DETTOT&MONUM;
 PVOLM1=A1N(NUM(&MONTH)+1);
 PVOLM2=A1N(NUM(&MONTH)+2);
 PVOLM3=A1N(NUM(&MONTH)+3);
 MVOLQ1=SUM(OF AN(NUM(&MONTH)+1) AN(NUM(&MONTH)+2) AN(NUM(&MONTH)+3));
 DETQ1=SUM (OF DETTOT(NUM(&MONTH)+1) DETTOT(NUM(&MONTH)+2) DETTOT(NUM(&MONTH)+3));
 RUN;

*** CHECK HOW MANY TEST & CAND HAVE ZEROES FOR ALL MATCHING VARIABLES;
DATA CHECKZERO;
  SET PRESTAND&MONTH (WHERE=(PVOLM1=0 AND PVOLM2=0 AND PVOLM3=0 AND
                      MVOLQ1=0 AND DETQ1=0));

PROC FREQ DATA=CHECKZERO; WHERE TESTCAND='T';  TABLES KEY;
  TITLE2 'RECORDS WITH ALL ZEROES FOR MATCHING VARIABLES'; RUN;

*** STANDARDIZE DATA ONLY FOR VARIABLES USED IN DISTANCE EQUATION;
PROC STANDARD DATA=PRESTAND&MONTH OUT=STAND&MONTH MEAN=0 STD=1;
 VAR PVOLM1 PVOLM2 PVOLM3 MVOLQ1 DETQ1;
 RUN;

DATA STDTEST&MONTH (RENAME=(DOCID=TDOCID IMSDRNUM=TIMSDRNUM))
     STDCAND&MONTH (DROP=HELCODE QTR RENAME=(DOCID=CDOCID IMSDRNUM=CIMSDRNUM));
 SET STAND&MONTH;
 IF TESTCAND='T' THEN OUTPUT STDTEST&MONTH;
 ELSE IF TESTCAND='C' THEN OUTPUT STDCAND&MONTH;

*** PULL TEST DOCTOR COUNTS BY KEY;
DATA KEYS&MONTH;
 SET MMF.KEYS_&CATNAME (WHERE=(COUNT>0 AND MONTH=&MONTH+&LAG));

PROC PRINT DATA=KEYS&MONTH;
 TITLE2 "KEYS FOR MONTH = &MONTH+&LAG"; RUN;

PROC SORT DATA=KEYS&MONTH; BY DESCENDING COUNT; RUN;

%LET KEYCOUNT=0;

DATA _NULL_;
SET KEYS&MONTH END=DONE;
KEYCOUNT+1;
IF DONE THEN CALL SYMPUT ('KEYCOUNT',KEYCOUNT);
RUN;
QUIT;

%IF &KEYCOUNT=0 %THEN %GOTO SKIP;

%PUT KEYCOUNT IS &KEYCOUNT; RUN;

*** LOOP THROUGH FASTCLUS BY KEY WITHIN A MONTH;
%DO I=1 %TO &KEYCOUNT;

 DATA _NULL_;
  SET KEYS&MONTH;
  IF _N_=&I;
  CALL SYMPUT ('KEY_ITER',KEY);
  CALL SYMPUT ('COUNT_ITER',TRIM(LEFT(COUNT)));
  CALL SYMPUT ('RATIO',CANDPERDOC); RUN;

   ODS LISTING CLOSE;
   PROC FASTCLUS DATA=STDCAND&MONTH(WHERE=(KEY="&KEY_ITER"))
       MAXC=&COUNT_ITER MAXITER=0 OUT=RESULT&I
       SEED=STDTEST&MONTH(WHERE=(KEY="&KEY_ITER"));
   ODS OUTPUT INITIALSEEDS=INITIAL&I;
   VAR PVOLM1 PVOLM2 PVOLM3 MVOLQ1 DETQ1;
   RUN;
   ODS LISTING;

  DATA RESULT&I; SET RESULT&I;
    MONTH=&MONTH+&LAG;
    RUN;

  DATA INITIAL&I; SET INITIAL&I;
    MONTH=&MONTH+&LAG;
    KEY="&KEY_ITER";
        CANDPERDOC="&RATIO";
        CLUSTNUM=CLUSTER+0;
    RUN;

  PROC APPEND DATA=RESULT&I BASE=FINALRESULTS&MONTH FORCE;
  PROC APPEND DATA=INITIAL&I BASE=ALLINITIAL&MONTH FORCE;
%END;

PROC APPEND DATA=FINALRESULTS&MONTH BASE=MMF.CLUSRESULTS_&CATNAME FORCE;
PROC APPEND DATA=ALLINITIAL&MONTH BASE=MMF.CLUSINITIAL_&CATNAME FORCE;
PROC APPEND DATA=STDTEST&MONTH BASE=TOTALTEST FORCE;

%SKIP:;
%END;

%MEND;
%CLUSLOOP;

PROC PRINT DATA=MMF.CLUSINITIAL_&CATNAME (OBS=10);
TITLE2 'SEED OUTPUT';
RUN;
PROC PRINT DATA=MMF.CLUSRESULTS_&CATNAME (OBS=10);
TITLE2 'CANDIDATE OUTPUT';
RUN;

****************************************************;
*** PICK FINAL CANDIDATES - MERGE BACK FOR TEST DATA;
****************************************************;

*** PICK ONLY ONE CANDIDATE PER TEST WITH LOWEST DISTANCE;
*** CLUSTER # REPEATS FOR EACH MONTH & KEY IN OUT.CLUSRESULTS;
PROC SORT DATA=MMF.CLUSRESULTS_&CATNAME OUT=PICK;
  BY MONTH KEY CLUSTER DISTANCE;  RUN;

PROC SORT DATA=PICK OUT=PICK2 NODUPKEY;
  BY MONTH KEY CLUSTER;  RUN;

*** MERGE OUTPUT FROM FASTCLUS TOGETHER - SEEDS & CANDIDATES;
PROC SORT DATA=MMF.CLUSINITIAL_&CATNAME (DROP=CLUSTER) OUT=SEED;
  BY MONTH KEY CLUSTNUM;  RUN;

DATA COMBINE (DROP=TESTCAND);
  MERGE PICK2 (IN=P RENAME=(PVOLM1=CPVOLM1 PVOLM2=CPVOLM2 PVOLM3=CPVOLM3
               MVOLQ1=CMVOLQ1 DETQ1=CDETQ1))
        SEED (RENAME=(CLUSTNUM=CLUSTER));
  BY MONTH KEY CLUSTER;
  CAND=P;

PROC PRINT DATA=COMBINE (OBS=5);
TITLE2 'MERGED SEED AND CANDIDATE FROM FASTCLUS OUTPUT'; RUN;

*** CHECKS FOR DUPLICATE CANDIDATES WITHIN ALL OF THE RATING;
*** AND WITHIN A MONTH FOR THE RATING;
PROC SORT DATA=PICK2 OUT=CHECK NODUPKEY; BY CDOCID; RUN;
PROC SORT DATA=PICK2 OUT=CHECK NODUPKEY; BY MONTH CDOCID; RUN;

*** MERGE BACK TO ORIGINAL TEST DATASET FOR DROPPED ATTENDEES;
*** FASTCLUS DROPS DUPICATE SEEDS IF HAVE SAME MATCHING DATA;
PROC SORT DATA=COMBINE OUT=COMBINESORT;
  BY MONTH KEY PVOLM1 PVOLM2 PVOLM3 MVOLQ1 DETQ1;  RUN;

PROC SORT DATA=TOTALTEST (KEEP=TDOCID TIMSDRNUM MONTH KEY PVOLM1 PVOLM2
          PVOLM3 MVOLQ1 DETQ1 HELCODE VENUE USCORDT HSAIND QTR &CATVAR) OUT=TTLSORT;
  BY MONTH KEY PVOLM1 PVOLM2 PVOLM3 MVOLQ1 DETQ1; RUN;

DATA MMF.TESTCOMP_RESULTS_&CATNAME;
  MERGE COMBINESORT (IN=A DROP=&CATVAR) TTLSORT;
  BY MONTH KEY PVOLM1 PVOLM2 PVOLM3 MVOLQ1 DETQ1;
  IF A;

PROC PRINT DATA=MMF.TESTCOMP_RESULTS_&CATNAME (OBS=20);
TITLE2 'FINAL DATASET'; RUN;

PROC MEANS DATA=MMF.TESTCOMP_RESULTS_&CATNAME N MEAN MIN MAX;
  VAR DISTANCE;  TITLE2 "SELECTION RESULTS FOR CAT=&CAT"; RUN;
PROC MEANS DATA=MMF.TESTCOMP_RESULTS_&CATNAME MEAN MIN MAX NWAY;
  CLASS KEY; VAR DISTANCE; RUN;

PROC FREQ DATA=MMF.TESTCOMP_RESULTS_&CATNAME;
TABLES CAND;  TITLE "CHECK # RECORDS W/O CANDIDATE - &CAT";  RUN;

RUN;
QUIT;


%MEND;

%BIGLOOP(A+,AP);
%BIGLOOP(A ,A );
%BIGLOOP(A-,AM);  
%BIGLOOP(B ,B );
%BIGLOOP(C ,C );
%BIGLOOP(D ,D );


*** CHECK HOW MANY TEST GET CANDIDATES;
DATA ALLRESULTS;
 SET MMF.TESTCOMP_RESULTS_AP (IN=A)  MMF.TESTCOMP_RESULTS_A (IN=B) MMF.TESTCOMP_RESULTS_AM (IN=C) 
     MMF.TESTCOMP_RESULTS_B  (IN=C)  MMF.TESTCOMP_RESULTS_C (IN=E) MMF.TESTCOMP_RESULTS_D (IN=F); 
	RUN;

PROC FREQ DATA=ALLRESULTS;
TABLES CAND*&CATVAR / LIST MISSING;  RUN;

PROC PRINTTO;
QUIT;


